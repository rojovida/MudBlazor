on:
  issues:
    types: [opened]

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body;
            let labels = [];
        
            if (body.includes("### Feature request type\n\nNew component")) {
              labels.push("new component");
              console.log("Feature request type: new component.");
              
            } else if (body.includes("### Feature request type\n\nPerformance improvement")) {
              labels.push("performance");
              console.log("Feature request type: Performance improvement.");
              
            } else if (body.includes("### Bug type\n\nDocs (mudblazor.com)")) {
              labels.push("docs");
              console.log("Bug type: docs.");
            }
            
            // Run bug-specific checks if this is a bug report
            if (body.includes("### Bug type")) {
              // Check for regression (user specified a previous working version)
              const regressionMatch = body.match(/### Version \(working\)\s*\n\s*[^\n#]*?v?\d+\.\d+/s);
              if (regressionMatch) {
                labels.push("regression");
                console.log("Working version specified - adding regression label.");
              }
              
              // Check for accessibility issues
              if (body.toLowerCase().includes("wcag") || body.toLowerCase().includes("screen reader") || body.toLowerCase().includes("nvda")) {
                labels.push("accessibility");
                console.log("Accessibility issue detected.");
              }
              
              // Check for mobile issues (iOS/Android selected in OS section)
              const osMatch = body.match(/### On which operating systems are you experiencing the issue\?\s*\n\s*([^#]*?)(?=\n###|$)/s);
              if (osMatch && (osMatch[1].includes("iOS") || osMatch[1].includes("Android"))) {
                labels.push("mobile");
                console.log("Mobile platform selected in OS section.");
              }
              
              // Check for Safari/iOS browser issues (Safari in browsers section OR iOS in OS section)
              const browsersMatch = body.match(/### What browsers are you seeing the problem on\?\s*\n\s*([^#]*?)(?=\n###|$)/s);
              const safariInBrowsers = browsersMatch && browsersMatch[1].includes("Safari");
              const iosInOS = osMatch && osMatch[1].includes("iOS");
              if (safariInBrowsers || iosInOS) {
                labels.push("safari");
                console.log("Safari browser or iOS platform selected.");
              }
              
              // Check for missing snippet (no mudblazor or github link)
              const hasMudBlazorLink = /https:\/\/[^"\s]*mudblazor[^"\s]*/i.test(body);
              const hasGitHubLink = /https:\/\/github\.com[^"\s]*/i.test(body);
              if (!hasMudBlazorLink && !hasGitHubLink) {
                labels.push("needs example");
                console.log("No MudBlazor or GitHub link found - adding needs example label.");
              }
            }
            
            if(labels.length != 0) {
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels
              })
            }